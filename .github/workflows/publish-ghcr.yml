name: -> PUBLISH to GHCR

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Tag version for manual runs"
        required: true
        default: "latest"
  pull_request:
    branches:
      - main

jobs:
  timestamp:
    uses: storyprotocol/gha-workflows/.github/workflows/reusable-timestamp.yml@main

  build_and_push:
    needs: timestamp
    runs-on: power-linux-x64

    steps:
      - name: Check out code
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5

      - name: Set build arguments
        id: set-version
        run: |
          # If version input is set (manual trigger), use it
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            # Fallback: capture latest git tag (for push events)
            # If there's no tag found, default to 'dev'
            DESCRIBED_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "dev")
            echo "VERSION=$DESCRIBED_TAG" >> $GITHUB_ENV
          fi

          echo "COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "BUILDNUM=${{ github.run_number }}" >> $GITHUB_ENV
          # Make sure this points to your GHCR repo, e.g. ghcr.io/<org>/<image>
          echo "REPOSITORY_URI=ghcr.io/your-org/geth" >> $GITHUB_ENV

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ github.ref }}-
            ${{ runner.os }}-buildx-

      - name: Build & Push Docker Image
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --build-arg BUILDNUM=$BUILDNUM \
            --build-arg COMMIT=$COMMIT \
            --build-arg VERSION=$VERSION \
            -t $REPOSITORY_URI:latest \
            -t $REPOSITORY_URI:$COMMIT \
            -t $REPOSITORY_URI:$VERSION \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache \
            --push \
            -f ./Dockerfile \
            .
